{"version":3,"sources":["resources/logo.svg","Title.tsx","Renderer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","className","this","props","title","subtitle","Component","Renderer","orbitControls","epsilon","mount","whaleMesh","mixer","numStars","renderer","THREE","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","scene","camera","position","x","cameraDist","z","y","lookAt","clock","render","addLights","geometry","material","color","torus","radius","add","stars","Array","fill","map","addStar","GLTFLoader","load","pubURL","gltf","clipAction","animations","play","undefined","error","console","log","controls","OrbitControls","animate","requestAnimationFrame","update","getDelta","t","getElapsedTime","phi","Math","PI","sin","omega","cos","set","period","frac","rotation","distanceTo","circleState","torusCircleState","random","onScore","lookVec","copy","normalize","multiplyScalar","forEach","star","i","axis","rotateOnAxis","hemiLight","intensity","dirLight","ambientLight","path","process","deg","rad","degToRad","rotX","transparent","opacity","randFloatSpread","rx","ry","rz","ref","App","incrementScore","setState","score","state","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e7179eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\ninterface TitleProps {\n\ttitle: string;\n\tsubtitle: string;\n}\n\nclass Title extends Component<TitleProps, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>{this.props.title}</h1>\n\t\t\t\t<p>{this.props.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport './css/Renderer.css'\n\ninterface RendererProps {\n  cameraDist: number;\n  radius: number;\n  omega: number;\n  onScore(): void;\n}\n\nclass Renderer extends Component<RendererProps> {\n\n  private orbitControls = false;\n  private epsilon = 1;\n\n  private mount: HTMLDivElement | null = null;\n  private whaleMesh: THREE.Object3D | null = null;\n  private mixer: THREE.AnimationMixer | null = null;\n\n  private numStars = 200;  \n\n\tcomponentDidMount() {\n\n    var renderer = new THREE.WebGLRenderer({alpha: true});\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild( renderer.domElement );\n    }\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.x = -this.props.cameraDist;\n    camera.position.z = this.props.cameraDist;\n    camera.position.y = this.props.cameraDist/2;\n    camera.lookAt(0,0,0);\n\n    const clock = new THREE.Clock();\n\n    renderer.render(scene, camera);\n\n    // Lights\n\n    this.addLights(scene);\n\n    // Helpers\n\n\n\n    // Torus\n\n    const geometry = new THREE.TorusGeometry(8, 1, 16, 100);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffcb2e });\n    const torus = new THREE.Mesh(geometry, material);\n    torus.position.y = this.props.radius;\n    scene.add(torus);\n\n    // Stars\n\n    const stars = Array(this.numStars).fill(null).map(() => this.addStar(scene));\n\n    // Whale\n\n    const loader = new GLTFLoader();\n    loader.load(this.pubURL('/models/bluewhale_textured.glb'), gltf => {\n\n      this.whaleMesh = gltf.scene;\n      this.whaleMesh.position.y = this.props.radius;\n\n      this.mixer = new THREE.AnimationMixer(this.whaleMesh);\n      this.mixer.clipAction(gltf.animations[7]).play(); // main animation\n\n      scene.add(this.whaleMesh);\n\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    // Scene\n\n    const controls = this.orbitControls ? new OrbitControls(camera, renderer.domElement) : null;\n\n    var animate = () => {\n      requestAnimationFrame(animate);\n\n      if (this.mixer) { this.mixer.update(clock.getDelta()); }\n      const t = clock.getElapsedTime();\n\n      if (this.whaleMesh) {\n        // move the whale in a circle\n        const phi = Math.PI / 2; // start at top of circle\n        const y = this.props.radius * Math.sin(-this.props.omega * t + phi);\n        const z = this.props.radius * Math.cos(-this.props.omega * t + phi);\n        this.whaleMesh.position.set(0, y, z);\n        const period = 2 * Math.PI / this.props.omega;\n        const frac = (t % period) / period;\n        this.whaleMesh.rotation.x = frac * Math.PI * 2;\n        \n        if (this.whaleMesh.position.distanceTo(torus.position) < this.epsilon) {\n          // move the torus to a random point in the whale's path when passed through\n          const circleState = this.torusCircleState(Math.random() * 360);\n          torus.position.set(circleState[0].x, circleState[0].y, circleState[0].z);\n          torus.rotation.set(circleState[1].x, circleState[1].y, circleState[1].z);\n\n          this.props.onScore();\n        }\n        // kinda follow the whale\n        let lookVec = new THREE.Vector3().copy(this.whaleMesh.position);\n        camera.lookAt(lookVec.normalize().multiplyScalar(2));\n      }\n      // update stars\n      const starAmp = 0.04;\n      const starOmega = 0.5;\n      stars.forEach((star, i) => {\n        const axis = new THREE.Vector3(i,i*i,i*i);\n        star.rotateOnAxis(axis.normalize(), 0.02);\n        // vertical wave effect\n        star.position.y += starAmp * Math.sin(starOmega*t + (star.position.x*2*Math.PI/this.numStars));\n      });\n\n      renderer.render(scene, camera);\n\n      if (controls) {controls.update();}\n    };\n    animate();\n  }\n\n  addLights(scene: THREE.Scene) {\n    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 );\n    hemiLight.position.set( 0, 300, 0 );\n    hemiLight.intensity = 2;\n    scene.add(hemiLight);\n\n    var dirLight = new THREE.DirectionalLight( 0xc300ff );\n    dirLight.position.set( 75, 300, -75 );\n    dirLight.intensity = 2;\n    scene.add(dirLight);\n\n    var ambientLight = new THREE.AmbientLight( 0xffffff );\n    ambientLight.intensity = 3;\n    scene.add(ambientLight);\n  }\n\n  pubURL(path: string): string { return process.env.PUBLIC_URL + path }\n\n  degToRad(deg: number): number { return deg * (Math.PI / 180); }\n  radToDeg(rad: number): number { return rad * (180 / Math.PI); }\n\n  torusCircleState(deg: number): [THREE.Vector3, THREE.Vector3] {\n    const z = this.props.radius * Math.cos(this.degToRad(deg));\n    const y = this.props.radius * Math.sin(this.degToRad(deg));\n\n    const rotX = this.degToRad(-deg + 90)\n    return [new THREE.Vector3(0, y, z), new THREE.Vector3(rotX, 0, 0)];\n  }\n\n  addStar(scene: THREE.Scene) {\n    const geometry = new THREE.SphereGeometry(0.4, 4, 2);\n    const material = new THREE.MeshStandardMaterial({\n      // blue, purple\n      color: Math.random() < 0.5 ? 0x42ebe5 : 0xd037db,\n      transparent: true,\n      opacity: 0.9\n    });\n    const star = new THREE.Mesh(geometry, material);\n  \n    const [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(150));\n    const [rx, ry, rz] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(Math.PI));\n  \n    star.position.set(x, y, z);\n    star.rotation.set(rx, ry, rz);\n    scene.add(star);\n    return star;\n  }\n\n  render() {\n    return (\n      <div className=\"Renderer\" ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\n\ninterface AppState {\n  score: number;\n}\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      score: 0\n    }\n  }\n\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Renderer cameraDist={50} radius={30} omega={0.3} onScore={this.incrementScore} />\n        <Title title=\"React + ThreeJS\" subtitle=\"Hope this website finds you whale.\" />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>Score: {this.state.score}</p>\n          <a href=\"https://github.com/nwager/react-threejs\" target=\"_blank\" rel=\"noreferrer\">Github Repo</a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}