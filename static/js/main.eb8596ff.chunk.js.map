{"version":3,"sources":["resources/logo.svg","Title.tsx","Renderer.tsx","LoadingScreen.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","props","puns","subtitle","Math","floor","random","length","className","this","Component","Renderer","mount","scene","THREE","numStars","moveWhale","whale","t","phi","PI","y","radius","sin","omega","z","cos","period","frac","position","set","rotation","x","addStar","camera","geometry","material","color","transparent","opacity","star","Array","fill","map","randFloatSpread","distanceTo","rx","ry","rz","add","manager","onLoad","onProgress","url","current","total","renderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","cameraDist","lookAt","render","whaleMesh","mixer","clock","addLights","GLTFLoader","load","pubURL","gltf","clipAction","animations","play","undefined","error","console","log","torus","setTorusCircle","fadeTorusArray","stars","animate","requestAnimationFrame","update","getDelta","getElapsedTime","push","createFadeTorus","onScore","fadeTori","lookVec","copy","normalize","multiplyScalar","forEach","i","rotateOnAxis","hemiLight","intensity","dirLight","ambientLight","deg","degToRad","oldTorus","clone","remove","splice","scale","addScalar","path","process","ref","LoadingScreen","style","width","progress","App","incrementScore","setState","prev","score","setInterval","state","clearInterval","max","fadeOutInterval","src","logo","alt","href","target","rel","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8596ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\nclass Title extends Component {\n\n\tprivate puns = [\n\t\t\"Hope this website finds you whale.\",\n\t\t\"Whale hello there.\",\n\t\t\"Welcome, it's been a whale.\",\n\t\t\"Long time no sea.\",\n\t\t\"This is a fun whalepaper.\",\n\t\t\"There's no real porpoise to this page.\",\n\t\t\"Isn't this fin.\",\n\t\t\"Whale, whale, whale, look who's here.\",\n\t\t\"Taylor won gold in the 2021 Cetacea-lympics Gymnastics competition.\",\n\t\t\"No pun here, you've been spared.\",\n\t]\n\tprivate subtitle: string;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.subtitle = this.puns[Math.floor(Math.random()*this.puns.length)];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>React + ThreeJS</h1>\n\t\t\t\t<p className=\"subtitle\">{this.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nimport './css/Renderer.css'\n\ninterface RendererProps {\n  cameraDist: number;\n  radius: number;\n  omega: number;\n\n  onScore(): void;\n  onProgress(current: number): void;\n  onLoad(): void;\n}\n\nclass Renderer extends Component<RendererProps> {\n\n  private mount: HTMLDivElement | null = null;\n  private scene: THREE.Scene = new THREE.Scene();\n\n  private numStars = 200;  \n\n\tcomponentDidMount() {\n\n    let manager = new THREE.LoadingManager();\n    manager.onLoad = this.props.onLoad;\n    manager.onProgress = (url, current, total) => {\n      this.props.onProgress(current/total);\n    }\n\n    let renderer = new THREE.WebGLRenderer({alpha: true});\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild(renderer.domElement);\n    }\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.x = -this.props.cameraDist;\n    camera.position.z = this.props.cameraDist;\n    camera.position.y = this.props.cameraDist/2;\n    camera.lookAt(0,0,0);\n    renderer.render(this.scene, camera);\n    \n    const clock = new THREE.Clock();\n\n    this.addLights();\n\n    // Whale\n    let whaleMesh: THREE.Object3D;\n    let mixer: THREE.AnimationMixer;\n    const loader = new GLTFLoader(manager);\n    loader.load(this.pubURL('/models/bluewhale_textured.glb'), gltf => {\n      whaleMesh = gltf.scene;\n      whaleMesh.position.y = this.props.radius;\n      this.scene.add(whaleMesh);\n      \n      mixer = new THREE.AnimationMixer(whaleMesh);\n      mixer.clipAction(gltf.animations[7]).play(); // main animation\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    // Torus\n    const geometry = new THREE.TorusGeometry(8, 1, 16, 100);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffcb2e });\n    const torus = new THREE.Mesh(geometry, material);\n    this.setTorusCircle(torus, Math.random() * 360);\n    this.scene.add(torus);\n    // array for fading tori animations\n    const fadeTorusArray: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>[] = [];\n\n    // Stars\n    const stars = Array(this.numStars).fill(null).map(() => this.addStar(camera));\n\n    var animate = () => {\n      requestAnimationFrame(animate);\n      if (mixer) { mixer.update(clock.getDelta()); }\n      const t = clock.getElapsedTime();\n\n      // all whale-related actions\n      if (whaleMesh) {\n        // move the whale in a circle\n        this.moveWhale(whaleMesh, t);\n        \n        // move torus when whale goes through, and create fading effect\n        const epsilon = 1; // tolerance for checking for equal positions\n        if (whaleMesh.position.distanceTo(torus.position) < epsilon) {\n          fadeTorusArray.push(this.createFadeTorus(torus));\n          this.setTorusCircle(torus, Math.random() * 360);\n          this.props.onScore();\n        }\n        // fade away score tori\n        this.fadeTori(fadeTorusArray);\n\n        // loosely follow the whale\n        let lookVec = new THREE.Vector3().copy(whaleMesh.position);\n        camera.lookAt(lookVec.normalize().multiplyScalar(2.3));\n      }\n\n      // update stars\n      const starAmp = 0.01;\n      const starOmega = 0.5;\n      stars.forEach((star, i) => {\n        // add a little randomness to the rotation axes\n        star.rotateOnAxis(new THREE.Vector3(i,i*i,i*i).normalize(), 0.02);\n        // vertical wave effect\n        star.position.y += starAmp * Math.sin(starOmega*(t + (star.position.x / 10)));\n      });\n\n      renderer.render(this.scene, camera);\n    };\n    animate();\n  }\n\n  addLights() {\n    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 );\n    hemiLight.position.set( 0, 300, 0 );\n    hemiLight.intensity = 2;\n    this.scene.add(hemiLight);\n\n    var dirLight = new THREE.DirectionalLight( 0xc300ff );\n    dirLight.position.set( 75, 300, -75 );\n    dirLight.intensity = 2;\n    this.scene.add(dirLight);\n\n    var ambientLight = new THREE.AmbientLight( 0xffffff );\n    ambientLight.intensity = 3;\n    this.scene.add(ambientLight);\n  }\n\n  moveWhale = (whale: any, t: number) => {\n    const phi = Math.PI / 2; // start at top of circle\n    const y = this.props.radius * Math.sin(-this.props.omega * t + phi);\n    const z = this.props.radius * Math.cos(-this.props.omega * t + phi);\n    const period = 2 * Math.PI / this.props.omega;\n    const frac = (t % period) / period;\n    whale.position.set(0, y, z);\n    whale.rotation.x = frac * Math.PI * 2;\n  }\n\n  // get torus position and rotation for a given angle on the circle path\n  setTorusCircle(torus: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>, deg: number) {\n    const z = this.props.radius * Math.cos(THREE.MathUtils.degToRad(deg));\n    const y = this.props.radius * Math.sin(THREE.MathUtils.degToRad(deg));\n\n    const rx = THREE.MathUtils.degToRad(-deg + 90)\n    torus.position.set(0, y, z);\n    torus.rotation.set(rx, 0, 0);\n  }\n\n  createFadeTorus(oldTorus: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>): THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial> {\n    const clone = oldTorus.clone();\n    clone.material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    clone.material.transparent = true;\n    this.scene.add(clone);\n    return clone;\n  }\n\n  fadeTori(fadeTorusArray: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>[]) {\n    const fadeAmount = 0.1;\n    const sizeInc = 0.06;\n    fadeTorusArray.forEach((torus, i) => {\n      if (torus.material.opacity <= 0) {\n        this.scene.remove(torus);\n        fadeTorusArray.splice(i, 1);\n      }\n      torus.material.opacity -= fadeAmount;\n      torus.scale.addScalar(sizeInc);\n    })\n  }\n\n  addStar = (camera: THREE.Camera) => {\n    const geometry = new THREE.SphereGeometry(0.4, 4, 2);\n    const material = new THREE.MeshStandardMaterial({\n      // blue, purple\n      color: Math.random() < 0.5 ? 0x42ebe5 : 0xd037db,\n      transparent: true,\n      opacity: 0.9\n    });\n    const star = new THREE.Mesh(geometry, material);\n  \n    let [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(150));\n    // reroll if too close to camera\n    while (new THREE.Vector3(x,y,z).distanceTo(camera.position) < 10) {\n      [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(150));\n    }\n    const [rx, ry, rz] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(Math.PI));\n  \n    star.position.set(x, y, z);\n    star.rotation.set(rx, ry, rz);\n    this.scene.add(star);\n    return star;\n  }\n\n  pubURL(path: string): string { return process.env.PUBLIC_URL + path }\n\n  render() {\n    return (\n      <div className=\"Renderer\" ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport './css/LoadingScreen.css';\n\ninterface LoadingScreenProps {\n\topacity: number;\n\tprogress: number;\n}\n\nclass LoadingScreen extends Component<LoadingScreenProps> {\n\trender() {\n\t\treturn this.props.opacity > 0 ? (\n\t\t\t<div className=\"LoadingScreen\" style={{opacity: this.props.opacity}}>\n\t\t\t\t<h1 className=\"loadingText\">Loading</h1>\n\t\t\t\t<div className=\"progressParent\">\n\t\t\t\t\t<div className=\"progressBar\" style={{ width: `${this.props.progress*100}%` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : null;\n\t}\n}\n\nexport default LoadingScreen;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\nimport LoadingScreen from './LoadingScreen';\n\ninterface AppState {\n  score: number;\n  opacity: number;\n  progress: number;\n  radius: number;\n  omega: number;\n  cameraDist: number;\n}\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      score: 0,\n      opacity: 1,\n      progress: 0,\n      radius: 50, // default 50\n      omega: 0.3, // default 0.3\n      cameraDist: 70, // default 70\n    }\n  }\n\n  incrementScore = () => {\n    this.setState(prev => { return { score: prev.score + 1 }})\n  }\n\n  onProgress = (current: number) => {\n    this.setState({ progress: current });\n  }\n\n  onLoad = () => {\n    const fadeOutDuration = 0.8; // seconds\n    const fadeOutInterval = 20; // milliseconds\n    setInterval(() => {\n      // before setState because state should be read before setting\n      if (this.state.opacity <= 0) {\n        clearInterval();\n      }\n      const fadeAmount = fadeOutInterval / (1000*fadeOutDuration);\n      this.setState(prev => { return { opacity: Math.max(prev.opacity-fadeAmount, 0) }});\n    }, fadeOutInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LoadingScreen opacity={this.state.opacity} progress={this.state.progress}/>\n        <Renderer cameraDist={this.state.cameraDist} radius={this.state.radius} omega={this.state.omega} onScore={this.incrementScore} onProgress={this.onProgress} onLoad={this.onLoad} />\n        <Title />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p className=\"scoreText\">{this.state.score}</p>\n          <a href=\"https://github.com/nwager/react-threejs\" target=\"_blank\" rel=\"noreferrer\">Github</a>\n        </header>\n        <div className=\"scrollSpace\" style={{ height: '100vh' }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}