{"version":3,"sources":["logo.svg","TitleText.tsx","Renderer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["TitleText","className","this","props","subtitle","Component","Renderer","mount","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","appendChild","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","ref","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+OAAe,MAA0B,iC,eCiB1BA,E,4JAVd,WACC,OACC,sBAAKC,UAAU,YAAf,UACC,mDACA,4BAAIC,KAAKC,MAAMC,kB,GALKC,a,OCqCTC,E,4MAlCLC,MAA+B,K,uDAExC,WAEC,IAAIC,EAAQ,IAAIC,IACVC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnBK,EAASC,QAASJ,OAAOC,WAAYD,OAAOE,aAGxCX,KAAKK,OACPL,KAAKK,MAAMS,YAAaF,EAASG,YAEnC,IAAIC,EAAW,IAAIT,IAAmB,EAAG,EAAG,GACxCU,EAAW,IAAIV,IAAyB,CAAEW,MAAO,QACjDC,EAAO,IAAIZ,IAAYS,EAAUC,GACrCX,EAAMc,IAAKD,GACXX,EAAOa,SAASC,EAAI,GACN,SAAVC,IACFC,sBAAuBD,GACvBJ,EAAKM,SAASC,GAAK,IACnBP,EAAKM,SAASE,GAAK,IACnBf,EAASgB,OAAQtB,EAAOE,GAE1Be,K,oBAGF,WAAU,IAAD,OACP,OACE,qBAAKM,IAAK,SAAAxB,GAAK,OAAK,EAAKA,MAAQA,S,GA/BhBF,aCyBR2B,E,4JAxBb,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWG,SAAS,wBACpB,yBAAQH,UAAU,aAAlB,UACE,qBAAKgC,IAAKC,EAAMjC,UAAU,WAAWkC,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACElC,UAAU,WACVmC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,mC,GAZQjC,aCMHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a431c40.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\n\ninterface TitleTextProps {\n\tsubtitle: string;\n}\n\nclass TitleText extends Component<TitleTextProps, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"TitleText\">\n\t\t\t\t<h1>React and ThreeJS</h1>\n\t\t\t\t<p>{this.props.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TitleText;","import React, {Component} from 'react';\nimport * as THREE from 'three';\n\ninterface RendererState {\n  mount: HTMLDivElement;\n}\n\nclass Renderer extends Component<{}, RendererState> {\n\n  private mount: HTMLDivElement | null = null;\n\n\tcomponentDidMount() {\n\n\t\tvar scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    // document.body.appendChild( renderer.domElement );\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild( renderer.domElement );\n    }\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    var cube = new THREE.Mesh( geometry, material );\n    scene.add( cube );\n    camera.position.z = 5;\n    var animate = function () {\n      requestAnimationFrame( animate );\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render( scene, camera );\n    };\n    animate();\n  }\n\n  render() {\n    return (\n      <div ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TitleText from \"./TitleText\";\nimport Renderer from \"./Renderer\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Renderer />\n        <TitleText subtitle=\"Oops I did it again\" />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}