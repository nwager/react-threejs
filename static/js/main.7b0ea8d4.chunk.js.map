{"version":3,"sources":["resources/logo.svg","Title.tsx","resources/sky_bg.jpg","Renderer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","className","this","props","subtitle","Component","Renderer","mount","whaleMesh","renderer","THREE","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","scene","camera","position","setZ","setX","render","geometry","material","color","torus","add","pointLight","set","ambientLight","lightHelper","gridHelper","GLTFLoader","load","process","gltf","undefined","error","console","log","controls","OrbitControls","skyTexture","skyURL","background","animate","requestAnimationFrame","rotation","x","y","z","update","ref","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yRAAe,MAA0B,iC,qBCkB1BA,E,4JAVd,WACC,OACC,sBAAKC,UAAU,QAAf,UACC,mDACA,4BAAIC,KAAKC,MAAMC,kB,GALCC,a,uBCPL,G,MAAA,IAA0B,oCCiG1BC,E,4MAnFLC,MAA+B,K,EAC/BC,UAAmC,K,uDAE5C,WAAqB,IAAD,OAEbC,EAAW,IAAIC,KACnBD,EAASE,QAASC,OAAOC,WAAYD,OAAOE,aAC5CL,EAASM,cAAcH,OAAOI,kBAE1Bd,KAAKK,OACPL,KAAKK,MAAMU,YAAaR,EAASS,YAEnC,IAAMC,EAAQ,IAAIT,KACZU,EAAS,IAAIV,IAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAE5FM,EAAOC,SAASC,KAAK,IACrBF,EAAOC,SAASE,MAAM,GAEtBd,EAASe,OAAOL,EAAOC,GAIvB,IAAMK,EAAW,IAAIf,KAAoB,GAAI,EAAG,GAAI,KAC9CgB,EAAW,IAAIhB,IAA2B,CAAEiB,MAAO,WACnDC,EAAQ,IAAIlB,IAAWe,EAAUC,GAEvCP,EAAMU,IAAID,GAIV,IAAME,EAAa,IAAIpB,IAAiB,UACxCoB,EAAWT,SAASU,IAAI,EAAG,EAAG,GAE9B,IAAMC,EAAe,IAAItB,IAAmB,UAC5CS,EAAMU,IAAIC,EAAYE,GAItB,IAAMC,EAAc,IAAIvB,IAAuBoB,GACzCI,EAAa,IAAIxB,IAAiB,IAAK,IAC7CS,EAAMU,IAAII,EAAaC,IAIR,IAAIC,KACZC,KAAKC,8CAAyD,SAAAC,GACnE,EAAK9B,UAAY8B,EAAKnB,MACtBA,EAAMU,IAAI,EAAKrB,kBACd+B,GAAW,SAAAC,GACZC,QAAQC,IAAI,+BACZD,QAAQC,IAAIF,MAGd,IAAMG,EAAW,IAAIC,IAAcxB,EAAQX,EAASS,YAE9C2B,GAAa,IAAInC,MAAsB0B,KAAKU,GAClD3B,EAAM4B,WAAaF,GAEL,SAAVG,IACFC,sBAAuBD,GAEvBpB,EAAMsB,SAASC,GAAK,IACpBvB,EAAMsB,SAASE,GAAK,KACpBxB,EAAMsB,SAASG,GAAK,IAEhB,EAAK7C,YACP,EAAKA,UAAU0C,SAASG,GAAK,KAG/B5C,EAASe,OAAQL,EAAOC,GAExBuB,EAASW,SAEXN,K,oBAGF,WAAU,IAAD,OACP,OACE,qBAAKO,IAAK,SAAAhD,GAAK,OAAK,EAAKA,MAAQA,S,GAhFhBF,aCURmD,E,4JAdb,WACE,OACE,sBAAKvD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOG,SAAS,wBAChB,yBAAQH,UAAU,aAAlB,UACE,qBAAKwD,IAAKC,EAAMzD,UAAU,WAAW0D,IAAI,SACzC,kE,GATQtD,aCMHuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7C,OACP,cAAC,IAAM8C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b0ea8d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\ninterface TitleProps {\n\tsubtitle: string;\n}\n\nclass Title extends Component<TitleProps, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>React and ThreeJS</h1>\n\t\t\t\t<p>{this.props.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","export default __webpack_public_path__ + \"static/media/sky_bg.381dc4c1.jpg\";","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport './css/Renderer.css'\nimport skyURL from './resources/sky_bg.jpg';\n\ninterface RendererState {\n  mount: HTMLDivElement;\n}\n\nclass Renderer extends Component<{}, RendererState> {\n\n  private mount: HTMLDivElement | null = null;\n  private whaleMesh: THREE.Object3D | null = null;\n\n\tcomponentDidMount() {\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild( renderer.domElement );\n    }\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.setZ(30);\n    camera.position.setX(-3);\n\n    renderer.render(scene, camera);\n\n    // Torus\n\n    const geometry = new THREE.TorusGeometry(10, 3, 16, 100);\n    const material = new THREE.MeshStandardMaterial({ color: 0xff6347 });\n    const torus = new THREE.Mesh(geometry, material);\n\n    scene.add(torus);\n\n    // Lights\n\n    const pointLight = new THREE.PointLight(0xffffff);\n    pointLight.position.set(5, 5, 5);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    scene.add(pointLight, ambientLight);\n\n    // Helpers\n\n    const lightHelper = new THREE.PointLightHelper(pointLight)\n    const gridHelper = new THREE.GridHelper(200, 50);\n    scene.add(lightHelper, gridHelper)\n\n    // Whale\n\n    const loader = new GLTFLoader();\n    loader.load(process.env.PUBLIC_URL + '/models/bluewhale_edited.glb', gltf => {\n      this.whaleMesh = gltf.scene;\n      scene.add(this.whaleMesh);\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    const skyTexture = new THREE.TextureLoader().load(skyURL);\n    scene.background = skyTexture;\n\n    var animate = () => {\n      requestAnimationFrame( animate );\n\n      torus.rotation.x += 0.01;\n      torus.rotation.y += 0.005;\n      torus.rotation.z += 0.01;\n\n      if (this.whaleMesh) {\n        this.whaleMesh.rotation.z += 0.01;\n      }\n\n      renderer.render( scene, camera );\n\n      controls.update();\n    };\n    animate();\n  }\n\n  render() {\n    return (\n      <div ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Renderer />\n        <Title subtitle=\"Subtitle from props\" />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>This is some body text.</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}