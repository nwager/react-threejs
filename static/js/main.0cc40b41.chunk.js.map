{"version":3,"sources":["resources/logo.svg","Title.tsx","resources/sky_bg.jpg","Renderer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","className","this","props","subtitle","Component","r","Renderer","mount","whaleMesh","mixer","renderer","THREE","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","scene","camera","position","x","z","y","distance","rotation","degToRad","clock","render","addLights","axesHelper","add","geometry","material","color","torus","GLTFLoader","load","pubURL","gltf","mesh","clipAction","animations","play","undefined","error","console","log","OrbitControls","skyTexture","skyURL","background","animate","requestAnimationFrame","update","getDelta","phi","Math","PI","t","getElapsedTime","sin","cos","set","period","frac","distanceTo","yzRotX","torusCircleState","random","onScore","hemiLight","intensity","dirLight","ambientLight","path","process","deg","rad","ref","App","incrementScore","setState","score","state","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cc40b41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\ninterface TitleProps {\n\tsubtitle: string;\n}\n\nclass Title extends Component<TitleProps, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>React and ThreeJS</h1>\n\t\t\t\t<p>{this.props.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","export default __webpack_public_path__ + \"static/media/sky_bg.381dc4c1.jpg\";","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport './css/Renderer.css'\nimport skyURL from './resources/sky_bg.jpg';\n\ninterface RendererProps {\n  onScore(): void;\n}\n\nconst orbitControls = false;\nconst distance = 50;\nconst r = 30;\nconst omega = 1 / 0.5;\nconst epsilon = 1\n\nclass Renderer extends Component<RendererProps> {\n\n  // change some of these to state?\n\n  private mount: HTMLDivElement | null = null;\n  private whaleMesh: THREE.Object3D | null = null;\n  private mixer: THREE.AnimationMixer | null = null;\n\n\tcomponentDidMount() {\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild( renderer.domElement );\n    }\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.x = -distance;\n    camera.position.z = distance;\n    camera.position.y = distance/2;\n    camera.rotation.x -= this.degToRad(26.56);\n    camera.rotation.y = this.degToRad(-45);\n\n    const clock = new THREE.Clock();\n\n    renderer.render(scene, camera);\n\n    // Lights\n\n    this.addLights(scene);\n\n    // Helpers\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add( axesHelper );\n\n    // Torus\n\n    const geometry = new THREE.TorusGeometry(8, 1, 16, 100);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffcb2e });\n    const torus = new THREE.Mesh(geometry, material);\n    torus.position.y = r;\n    torus.rotation.x = this.degToRad(15);\n    scene.add(torus);\n\n    // Whale\n\n    const loader = new GLTFLoader();\n    loader.load(this.pubURL('/models/bluewhale_textured.glb'), gltf => {\n\n      const mesh = gltf.scene;\n      mesh.position.y = r;\n      this.whaleMesh = mesh;\n\n      this.mixer = new THREE.AnimationMixer(this.whaleMesh);\n      this.mixer.clipAction(gltf.animations[7]).play(); // main animation\n\n      scene.add(this.whaleMesh);\n\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    const skyTexture = new THREE.TextureLoader().load(skyURL);\n    scene.background = skyTexture;\n\n    var animate = () => {\n      requestAnimationFrame( animate );\n\n      if (this.mixer) { this.mixer.update(clock.getDelta()); }\n\n      if (this.whaleMesh) {\n        const phi = Math.PI / 2; // start at top of circle\n        const t = clock.getElapsedTime();\n        const y = r * Math.sin(-omega * t + phi);\n        const z = r * Math.cos(-omega * t + phi);\n        this.whaleMesh.position.set(0, y, z);\n        const period = 2 * Math.PI / omega;\n        const frac = (t % period) / period;\n        this.whaleMesh.rotation.x = frac * Math.PI * 2;\n\n        if (this.whaleMesh.position.distanceTo(torus.position) < epsilon) {\n          const yzRotX = this.torusCircleState(Math.random() * 360);\n          torus.position.set(0, yzRotX[0], yzRotX[1]);\n          torus.rotation.set(yzRotX[2], 0, 0);\n\n          this.props.onScore();\n        }\n      }\n\n      renderer.render( scene, camera );\n\n      if (orbitControls) {controls.update();}\n    };\n    animate();\n  }\n\n  addLights(scene: THREE.Scene) {\n    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 );\n    hemiLight.position.set( 0, 300, 0 );\n    hemiLight.intensity = 2;\n    scene.add( hemiLight );\n\n    var dirLight = new THREE.DirectionalLight( 0xffffff );\n    dirLight.position.set( 75, 300, -75 );\n    dirLight.intensity = 2;\n    scene.add( dirLight );\n\n    var ambientLight = new THREE.AmbientLight( 0xffffff );\n    ambientLight.intensity = 3;\n    scene.add(ambientLight);\n  }\n\n  pubURL(path: string): string { return process.env.PUBLIC_URL + path }\n\n  degToRad(deg: number): number { return deg * (Math.PI / 180); }\n  radToDeg(rad: number): number { return rad * (180 / Math.PI); }\n\n  torusCircleState(deg: number): [number, number, number] {\n    const z = r * Math.cos(this.degToRad(deg));\n    const y = r * Math.sin(this.degToRad(deg));\n\n    const rotX = this.degToRad(-deg + 90)\n    return [y, z, rotX];\n  }\n\n  render() {\n    return (\n      <div ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\n\ninterface AppState {\n  score: number;\n}\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      score: 0\n    }\n  }\n\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Renderer onScore={this.incrementScore} />\n        <Title subtitle=\"Subtitle from props\" />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>Score: {this.state.score}</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}