{"version":3,"sources":["resources/logo.svg","Title.tsx","Renderer.tsx","LoadingScreen.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","props","puns","subtitle","Math","floor","random","length","className","this","Component","Renderer","mount","scene","THREE","manager","onLoad","onProgress","url","current","total","renderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","camera","position","x","cameraDist","z","y","lookAt","render","whaleMesh","mixer","clock","addLights","GLTFLoader","load","pubURL","gltf","radius","add","clipAction","animations","play","undefined","error","console","log","geometry","material","color","torus","setTorusCircle","fadeTorusArray","stars","Array","fill","map","addStar","animate","requestAnimationFrame","update","getDelta","t","getElapsedTime","moveWhale","distanceTo","push","createFadeTorus","onScore","fadeTori","lookVec","copy","normalize","multiplyScalar","forEach","star","i","rotateOnAxis","sin","hemiLight","set","intensity","dirLight","ambientLight","whale","phi","PI","omega","cos","period","frac","rotation","deg","degToRad","rx","oldTorus","clone","transparent","opacity","remove","splice","scale","addScalar","randFloatSpread","ry","rz","path","process","ref","LoadingScreen","style","width","progress","App","incrementScore","setState","prev","score","setInterval","state","clearInterval","max","fadeOutInterval","src","logo","alt","href","target","rel","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c21783.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\nclass Title extends Component {\n\n\tprivate puns = [\n\t\t\"Hope this website finds you whale.\",\n\t\t\"Whale hello there.\",\n\t\t\"Welcome, it's been a whale.\",\n\t\t\"Long time no sea.\",\n\t\t\"This is a fun whalepaper.\",\n\t\t\"There's no real porpoise to this page.\",\n\t\t\"Isn't this fin.\",\n\t\t\"Whale, whale, whale, look who's here.\",\n\t\t\"Taylor won gold in the 2021 Cetacea-lympics Gymnastics competition.\",\n\t\t\"No pun here, you've been spared.\",\n\t]\n\tprivate subtitle: string;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.subtitle = this.puns[Math.floor(Math.random()*this.puns.length)];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>React + ThreeJS</h1>\n\t\t\t\t<p className=\"subtitle\">{this.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nimport './css/Renderer.css'\n\ninterface RendererProps {\n  cameraDist: number;\n  radius: number;\n  omega: number;\n\n  onScore(): void;\n  onProgress(current: number): void;\n  onLoad(): void;\n}\n\nclass Renderer extends Component<RendererProps> {\n\n  private mount: HTMLDivElement | null = null;\n  private scene: THREE.Scene = new THREE.Scene();\n\n\tcomponentDidMount() {\n\n    let manager = new THREE.LoadingManager();\n    manager.onLoad = this.props.onLoad;\n    manager.onProgress = (url, current, total) => {\n      this.props.onProgress(current/total);\n    }\n\n    let renderer = new THREE.WebGLRenderer({alpha: true});\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild(renderer.domElement);\n    }\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.x = -this.props.cameraDist;\n    camera.position.z = this.props.cameraDist;\n    camera.position.y = this.props.cameraDist/2;\n    camera.lookAt(0,0,0);\n    renderer.render(this.scene, camera);\n    \n    const clock = new THREE.Clock();\n\n    this.addLights();\n\n    // Whale\n    let whaleMesh: THREE.Object3D;\n    let mixer: THREE.AnimationMixer;\n    const loader = new GLTFLoader(manager);\n    loader.load(this.pubURL('/models/bluewhale_textured.glb'), gltf => {\n      whaleMesh = gltf.scene;\n      whaleMesh.position.y = this.props.radius;\n      this.scene.add(whaleMesh);\n      \n      mixer = new THREE.AnimationMixer(whaleMesh);\n      mixer.clipAction(gltf.animations[7]).play(); // main animation\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    // Torus\n    const geometry = new THREE.TorusGeometry(8, 1, 16, 100);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffcb2e });\n    const torus = new THREE.Mesh(geometry, material);\n    this.setTorusCircle(torus, Math.random() * 360);\n    this.scene.add(torus);\n    // array for fading tori animations\n    const fadeTorusArray: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>[] = [];\n\n    // Stars\n    const stars = Array(250).fill(null).map(() => this.addStar(camera));\n\n    // All animation\n    var animate = () => {\n      requestAnimationFrame(animate);\n      if (mixer) { mixer.update(clock.getDelta()); }\n      const t = clock.getElapsedTime();\n\n      // all whale-related actions\n      if (whaleMesh) {\n        // move the whale in a circle\n        this.moveWhale(whaleMesh, t);\n        \n        // move torus when whale goes through, and create fading effect\n        const epsilon = 1; // tolerance for checking for equal positions\n        if (whaleMesh.position.distanceTo(torus.position) < epsilon) {\n          fadeTorusArray.push(this.createFadeTorus(torus));\n          this.setTorusCircle(torus, Math.random() * 360);\n          this.props.onScore();\n        }\n        // fade away score tori\n        this.fadeTori(fadeTorusArray);\n\n        // loosely follow the whale\n        let lookVec = new THREE.Vector3().copy(whaleMesh.position);\n        camera.lookAt(lookVec.normalize().multiplyScalar(2.3));\n      }\n\n      // update stars\n      const starAmp = 0.01;\n      const starOmega = 0.5;\n      stars.forEach((star, i) => {\n        // add a little randomness to the rotation axes\n        star.rotateOnAxis(new THREE.Vector3(i,i*i,i*i).normalize(), 0.02);\n        // vertical wave effect\n        star.position.y += starAmp * Math.sin(starOmega*(t + (star.position.x / 10)));\n      });\n\n      renderer.render(this.scene, camera);\n    };\n    animate();\n  }\n\n  // adds all lights to the scene\n  addLights() {\n    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 );\n    hemiLight.position.set( 0, 300, 0 );\n    hemiLight.intensity = 2;\n    this.scene.add(hemiLight);\n\n    var dirLight = new THREE.DirectionalLight( 0xc300ff );\n    dirLight.position.set( 75, 300, -75 );\n    dirLight.intensity = 2;\n    this.scene.add(dirLight);\n\n    var ambientLight = new THREE.AmbientLight( 0xffffff );\n    ambientLight.intensity = 3;\n    this.scene.add(ambientLight);\n  }\n\n  // moves whale along circlular path, given the curren time\n  moveWhale(whale: any, t: number) {\n    const phi = Math.PI / 2; // start at top of circle\n    const y = this.props.radius * Math.sin(-this.props.omega * t + phi);\n    const z = this.props.radius * Math.cos(-this.props.omega * t + phi);\n    const period = 2 * Math.PI / this.props.omega;\n    const frac = (t % period) / period;\n    whale.position.set(0, y, z);\n    whale.rotation.x = frac * Math.PI * 2;\n  }\n\n  // get torus position and rotation for a given angle on the circle path\n  setTorusCircle(torus: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>, deg: number) {\n    const z = this.props.radius * Math.cos(THREE.MathUtils.degToRad(deg));\n    const y = this.props.radius * Math.sin(THREE.MathUtils.degToRad(deg));\n\n    const rx = THREE.MathUtils.degToRad(-deg + 90)\n    torus.position.set(0, y, z);\n    torus.rotation.set(rx, 0, 0);\n  }\n\n  // instantiates torus fade animation\n  createFadeTorus(oldTorus: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>): THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial> {\n    const clone = oldTorus.clone();\n    clone.material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    clone.material.transparent = true;\n    this.scene.add(clone);\n    return clone;\n  }\n\n  // fades all active tori animations\n  fadeTori(fadeTorusArray: THREE.Mesh<THREE.TorusGeometry, THREE.MeshBasicMaterial>[]) {\n    const fadeAmount = 0.1;\n    const sizeInc = 0.06;\n    fadeTorusArray.forEach((torus, i) => {\n      if (torus.material.opacity <= 0) {\n        this.scene.remove(torus);\n        fadeTorusArray.splice(i, 1);\n      }\n      torus.material.opacity -= fadeAmount;\n      torus.scale.addScalar(sizeInc);\n    })\n  }\n\n  // instantiates a star\n  addStar(camera: THREE.Camera) {\n    const geometry = new THREE.SphereGeometry(0.4, 4, 2);\n    const material = new THREE.MeshStandardMaterial({\n      // blue, purple\n      color: Math.random() < 0.5 ? 0x42ebe5 : 0xd037db,\n      transparent: true,\n      opacity: 0.9\n    });\n    const star = new THREE.Mesh(geometry, material);\n  \n    let [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(200));\n    // reroll if too close to camera\n    while (new THREE.Vector3(x,y,z).distanceTo(camera.position) < 10) {\n      [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(200));\n    }\n    const [rx, ry, rz] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(Math.PI));\n  \n    star.position.set(x, y, z);\n    star.rotation.set(rx, ry, rz);\n    this.scene.add(star);\n    return star;\n  }\n\n  // adds public URL to beginning of path\n  pubURL(path: string): string { return process.env.PUBLIC_URL + path }\n\n  render() {\n    return (\n      <div className=\"Renderer\" ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport './css/LoadingScreen.css';\n\ninterface LoadingScreenProps {\n\topacity: number;\n\tprogress: number;\n}\n\nclass LoadingScreen extends Component<LoadingScreenProps> {\n\trender() {\n\t\treturn this.props.opacity > 0 ? (\n\t\t\t<div className=\"LoadingScreen\" style={{opacity: this.props.opacity}}>\n\t\t\t\t<h1 className=\"loadingText\">Loading</h1>\n\t\t\t\t<div className=\"progressParent\">\n\t\t\t\t\t<div className=\"progressBar\" style={{ width: `${this.props.progress*100}%` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : null;\n\t}\n}\n\nexport default LoadingScreen;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\nimport LoadingScreen from './LoadingScreen';\n\ninterface AppState {\n  score: number;\n  opacity: number;\n  progress: number;\n  radius: number;\n  omega: number;\n  cameraDist: number;\n}\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      score: 0,\n      opacity: 1,\n      progress: 0,\n      radius: 50, // default 50\n      omega: 0.3, // default 0.3\n      cameraDist: 70, // default 70\n    }\n  }\n\n  incrementScore = () => {\n    this.setState(prev => { return { score: prev.score + 1 }})\n  }\n\n  onProgress = (current: number) => {\n    this.setState({ progress: current });\n  }\n\n  onLoad = () => {\n    const fadeOutDuration = 0.8; // seconds\n    const fadeOutInterval = 20; // milliseconds\n    setInterval(() => {\n      // before setState because state should be read before setting\n      if (this.state.opacity <= 0) {\n        clearInterval();\n      }\n      const fadeAmount = fadeOutInterval / (1000*fadeOutDuration);\n      this.setState(prev => { return { opacity: Math.max(prev.opacity-fadeAmount, 0) }});\n    }, fadeOutInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LoadingScreen opacity={this.state.opacity} progress={this.state.progress}/>\n        <Renderer cameraDist={this.state.cameraDist} radius={this.state.radius} omega={this.state.omega} onScore={this.incrementScore} onProgress={this.onProgress} onLoad={this.onLoad} />\n        <Title />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p className=\"scoreText\">{this.state.score}</p>\n          <a href=\"https://github.com/nwager/react-threejs\" target=\"_blank\" rel=\"noreferrer\">Github</a>\n        </header>\n        <div className=\"scrollSpace\" style={{ height: '100vh' }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}