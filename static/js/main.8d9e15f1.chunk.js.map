{"version":3,"sources":["resources/logo.svg","Title.tsx","resources/sky_bg.jpg","Renderer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","className","this","props","subtitle","Component","Renderer","orbitControls","epsilon","mount","whaleMesh","mixer","renderer","THREE","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","appendChild","domElement","scene","camera","position","x","cameraDist","z","y","rotation","degToRad","clock","render","addLights","axesHelper","add","geometry","material","color","torus","radius","GLTFLoader","load","pubURL","gltf","clipAction","animations","play","undefined","error","console","log","controls","OrbitControls","skyTexture","skyURL","background","animate","requestAnimationFrame","update","getDelta","phi","Math","PI","t","getElapsedTime","sin","omega","cos","set","period","frac","distanceTo","circleState","torusCircleState","random","onScore","hemiLight","intensity","dirLight","ambientLight","path","process","deg","rad","rotX","ref","App","incrementScore","setState","score","state","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d9e15f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './css/Title.css';\n\ninterface TitleProps {\n\tsubtitle: string;\n}\n\nclass Title extends Component<TitleProps, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Title\">\n\t\t\t\t<h1>React and ThreeJS</h1>\n\t\t\t\t<p>{this.props.subtitle}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Title;","export default __webpack_public_path__ + \"static/media/sky_bg.381dc4c1.jpg\";","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport './css/Renderer.css'\nimport skyURL from './resources/sky_bg.jpg';\n\ninterface RendererProps {\n  cameraDist: number;\n  radius: number;\n  omega: number;\n  onScore(): void;\n}\n\nclass Renderer extends Component<RendererProps> {\n\n  private orbitControls = false;\n  private epsilon = 1;\n\n  private mount: HTMLDivElement | null = null;\n  private whaleMesh: THREE.Object3D | null = null;\n  private mixer: THREE.AnimationMixer | null = null;\n\n\tcomponentDidMount() {\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // use ref as a mount point of the Three.js scene instead of the document.body\n    if (this.mount) {\n      this.mount.appendChild( renderer.domElement );\n    }\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    camera.position.x = -this.props.cameraDist;\n    camera.position.z = this.props.cameraDist;\n    camera.position.y = this.props.cameraDist/2;\n    camera.rotation.x -= this.degToRad(26.56);\n    camera.rotation.y = this.degToRad(-45);\n\n    const clock = new THREE.Clock();\n\n    renderer.render(scene, camera);\n\n    // Lights\n\n    this.addLights(scene);\n\n    // Helpers\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add( axesHelper );\n\n    // Torus\n\n    const geometry = new THREE.TorusGeometry(8, 1, 16, 100);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffcb2e });\n    const torus = new THREE.Mesh(geometry, material);\n    torus.position.y = this.props.radius;\n    torus.rotation.x = this.degToRad(15);\n    scene.add(torus);\n\n    // Whale\n\n    const loader = new GLTFLoader();\n    loader.load(this.pubURL('/models/bluewhale_textured.glb'), gltf => {\n\n      this.whaleMesh = gltf.scene;\n      this.whaleMesh.position.y = this.props.radius;\n\n      this.mixer = new THREE.AnimationMixer(this.whaleMesh);\n      this.mixer.clipAction(gltf.animations[7]).play(); // main animation\n\n      scene.add(this.whaleMesh);\n\n    }, undefined, error => {\n      console.log(\"That's a whale of an error!\");\n      console.log(error);\n    });\n\n    // Scene\n\n    const controls = this.orbitControls ? new OrbitControls(camera, renderer.domElement) : null;\n\n    const skyTexture = new THREE.TextureLoader().load(skyURL);\n    scene.background = skyTexture;\n\n    var animate = () => {\n      requestAnimationFrame( animate );\n\n      if (this.mixer) { this.mixer.update(clock.getDelta()); }\n\n      if (this.whaleMesh) {\n        // move the whale in a circle\n        const phi = Math.PI / 2; // start at top of circle\n        const t = clock.getElapsedTime();\n        const y = this.props.radius * Math.sin(-this.props.omega * t + phi);\n        const z = this.props.radius * Math.cos(-this.props.omega * t + phi);\n        this.whaleMesh.position.set(0, y, z);\n        const period = 2 * Math.PI / this.props.omega;\n        const frac = (t % period) / period;\n        this.whaleMesh.rotation.x = frac * Math.PI * 2;\n\n        if (this.whaleMesh.position.distanceTo(torus.position) < this.epsilon) {\n          // move the torus to a random point in the whale's path when passed through\n          const circleState = this.torusCircleState(Math.random() * 360);\n          torus.position.set(0, circleState[0].y, circleState[0].z);\n          torus.rotation.set(circleState[1].x, 0, 0);\n\n          this.props.onScore();\n        }\n      }\n\n      renderer.render( scene, camera );\n\n      if (controls) {controls.update();}\n    };\n    animate();\n  }\n\n  addLights(scene: THREE.Scene) {\n    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 );\n    hemiLight.position.set( 0, 300, 0 );\n    hemiLight.intensity = 2;\n    scene.add( hemiLight );\n\n    var dirLight = new THREE.DirectionalLight( 0xffffff );\n    dirLight.position.set( 75, 300, -75 );\n    dirLight.intensity = 2;\n    scene.add( dirLight );\n\n    var ambientLight = new THREE.AmbientLight( 0xffffff );\n    ambientLight.intensity = 3;\n    scene.add(ambientLight);\n  }\n\n  pubURL(path: string): string { return process.env.PUBLIC_URL + path }\n\n  degToRad(deg: number): number { return deg * (Math.PI / 180); }\n  radToDeg(rad: number): number { return rad * (180 / Math.PI); }\n\n  torusCircleState(deg: number): [THREE.Vector3, THREE.Vector3] {\n    const z = this.props.radius * Math.cos(this.degToRad(deg));\n    const y = this.props.radius * Math.sin(this.degToRad(deg));\n\n    const rotX = this.degToRad(-deg + 90)\n    return [new THREE.Vector3(0, y, z), new THREE.Vector3(rotX, 0, 0)];\n  }\n\n  render() {\n    return (\n      <div ref={mount => (this.mount = mount)} />\n    )\n  }\n}\n\nexport default Renderer;","import React, {Component} from 'react';\nimport logo from './resources/logo.svg';\nimport './css/App.css';\nimport Title from \"./Title\";\nimport Renderer from \"./Renderer\";\n\ninterface AppState {\n  score: number;\n}\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      score: 0\n    }\n  }\n\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Renderer cameraDist={50} radius={30} omega={0.5} onScore={this.incrementScore} />\n        <Title subtitle=\"Hope this website finds you whale.\" />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>Score: {this.state.score}</p>\n          <a href=\"https://github.com/nwager/react-threejs\" target=\"_blank\" rel=\"noreferrer\">Github Repo</a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}